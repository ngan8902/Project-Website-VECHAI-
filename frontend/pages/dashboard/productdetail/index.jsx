import Head from "next/head";
import { useState, useEffect } from "react";
import _ from "lodash";
import axios from "@/helper/axios.helper";
import Image from "next/image";

import Layout from "@/components/layout";
import { pages } from "@/utils/contanst";
import { Button } from "reactstrap";


export async function getServerSideProps({ req, res }) {
    const token = req.cookies["vechaitoken"];
    const { data } = await axios({
        url: "/api/customer/getbytoken",
        method: "GET",
        headers: { authorization: token },
    });
    if (!data) NextResponse.redirect(new URL("/login", req.url));

    return {
        props: {
            userData: data[0] || {},
        },
    };
}

export default function ProductDetails({ userData }) {

    const { fullname, name, email, accessApp } = userData;
    const [posts, setPosts] = useState([])
    const [layoutPages, setLayoutPages] = useState([]);

    useEffect(() => {
        detectAccessPage()
        refreshPosts()
    }, []);

    const refreshPosts = () => {
        axios.get("/api/post?limit=5").then((res) => {
            console.log(res);
            if (res && res.data) {
                const { data } = res.data;
                setPosts(data);
            }
        });
    }

    const detectAccessPage = () => {
        const accessAppsList = accessApp.split(", ");
        if (accessAppsList && Array.isArray(accessAppsList)) {
            const userPages = _.filter(pages, (page) => {
                return accessAppsList.includes(page.key);
            });
            setLayoutPages(userPages);
        }
    }

    function formatMoney(amount, decimalCount = 2, decimal = ".", thousands = ",") {
        try {
            decimalCount = Math.abs(decimalCount);
            decimalCount = isNaN(decimalCount) ? 2 : decimalCount;

            const negativeSign = amount < 0 ? "-" : "";

            let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();
            let j = (i.length > 3) ? i.length % 3 : 0;

            return negativeSign +
                (j ? i.substr(0, j) + thousands : '') +
                i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousands) +
                (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : "");
        } catch (e) {
            console.log(e)
        }
    }

    const onClickNegotiate = () => {
        console.log("test")
    }

    return (
        <>
            <Head>
                <title>Chi tiết sản phẩm</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="ico" href="/favicon.ico"></link>
            </Head>
            <main>
                <Layout pages={layoutPages} user={{ fullname, name, email }}>
                    <div className="browse" style={{margin: "20px"}}>
                        {
                            posts.map((post, index) => {
                                return (
                                    <div className="card nft mb-3" style={{maxwidth: "540px", paddingTop: "20px"}} key={index}>
                                        <div className="row g-0">
                                            <div className="col-md-4"  style={{width: "revert-layer"}}>
                                                <Image
                                                    loader={() => { return post.image }}
                                                    src="https://via.placeholder.com/500x500"
                                                    alt="Picture of the author"
                                                    width={200}
                                                    height={200}
                                                />
                                            </div>
                                            <div className="col-md-8" style={{paddingLeft: "70px"}}>
                                                <div className="card-body">
                                                    <div className="title">{post.name}</div>
                                                    <p className='status'>{post.content}</p>
                                                    <p className="price" style={{width: "auto"}}>{formatMoney(post.expect_price, 0)}{' '}/Kg</p>
                                                    <button className="btnGia" onClick={onClickNegotiate}>
                                                        Thương lượng giá
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                )
                            })
                        }

                    </div>


                </Layout>
            </main>
        </>
    )

}
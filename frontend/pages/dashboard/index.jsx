import Head from 'next/head';
import dynamic from 'next/dynamic';
import { FcShop, FcNews } from 'react-icons/fc';
import { useState, useEffect } from 'react';
import { pages } from "@/utils/contanst";
import { NextResponse } from "next/server";
import _ from 'lodash';
import { Modal, ModalHeader, ModalBody } from 'reactstrap';
import axios from 'axios';

import Axios from "@/helper/axios.helper";
import Layout from '@/components/layout';
import PostDashboard from "@/components/postDashboard";
import TopYards from '@/components/topYard';
import CreatePostPage from '@/components/createPost';

export async function getServerSideProps({ req, res }) {
    const token = req.cookies["vechaitoken"];
    const { data } = await Axios({
        url: "/api/customer/getbytoken",
        method: "GET",
        headers: { authorization: token },
    });
    if (!data) NextResponse.redirect(new URL("/login", req.url));

    return {
        props: {
            userData: data[0] || {},
        },
    };
}


export default function Dashboard({ userData }) {
    const { fullname, name, email, accessApp } = userData; // accessApp = "dashboard, post"

    const [layoutPages, setLayoutPages] = useState([]);

    useEffect(() => {
        detectAccessPage()
    }, []);

    const renderContent = (roleName) => {
        if (roleName === "saler") {
            return <SalerComponent userData={userData}></SalerComponent>;
        } else if (roleName === "buyer") {
            return <BuyerComponent userData={userData}></BuyerComponent>;
        } else if (roleName === "yard") {
            return <YardComponent></YardComponent>;
        } else {
            return <h1></h1>
        }
    };

    const detectAccessPage = () => {
        if (!accessApp) return
        const accessAppsList = accessApp.split(", ");
        if (accessAppsList && Array.isArray(accessAppsList)) {
            const userPages = _.filter(pages, (page) => {
                return accessAppsList.includes(page.key);
            });
            setLayoutPages(userPages);
        }
    }


    return (
        <>
            <Head>
                <title>Trang ch·ªß</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="ico" href="/favicon.ico"></link>
            </Head>
            <main>
                <Layout pages={layoutPages} user={{ fullname, name, email }}>
                    {renderContent(name, userData)}
                </Layout>
            </main>
        </>
    );
}

function BuyerComponent({userData = []}) {
    const Map = dynamic(() => import("@/components/Map"), {
        ssr: false,
        loading: () => <p>Loading...</p>,
    });

    const [posts, setPosts] = useState([]);
    const [yards, setYards] = useState([]);

    useEffect(() => {
        refreshPosts()
        refreshYard()
    }, []);

    const refreshPosts = () => {
        axios.get("/api/post?limit=5").then((res) => {
            console.log(res);
            if (res && res.data) {
                const { data } = res.data;
                setPosts(data);
            }
        });
    }

    const refreshYard = () => {
        axios.get("/api/yard").then((res) => {
            if (res && res.data) {
                const { data } = res.data;
                data.forEach(yard => {
                    if (!yard["lag_lat"]) return
                    yard["position"] = yard["lag_lat"].split(', ')
                    yard["popupContent"] = yard.address
                });
                setYards(data);
            }
        });
    }

    
    return (
        <>
            {/* <!-- ======Section======= --> */}
            <div className="section flex flex-sb">
                {/* <!-- Section Left --> */}
                <div className="section-left">
                    {/* <!-- ======Banner======= --> */}
                    <p className='maptitle'>B·∫£n ƒë·ªì ch·ªâ v·ªã tr√≠ c·ªßa c√°c v·ª±a ve chai g·∫ßn b·∫°n</p>
                    <div>
                        <Map markerList={yards}></Map>
                    </div>

                    <div className="nfts">
                        <div className="trending heading flex flex-sb">
                            <h2>B√†i ƒëƒÉng v·ªÅ ve chai c·∫ßn b√°n</h2>
                        </div>

                        {/* <!-- ======Categories======= --> */}

                        <div className="categories flex flex-sb">
                            <div className="category flex">
                                <div className="icon">üî•</div>
                                <p>Tin n·ªïi b·∫≠t</p>
                            </div>

                            <div className="category flex">
                                <FcNews style={{ marginRight: '10px' }} className='icon' />
                                <p>B·∫£ng tin</p>
                            </div>

                            <div className="category flex">
                                <div className="icon">üïπÔ∏è</div>
                                <p>G·∫ßn b·∫°n</p>
                            </div>

                            <div className="category flex">
                                <FcShop style={{ marginRight: '10px' }} className='icon' />
                                <p>C√°c v·ª±a</p>
                            </div>
                        </div>
                        {/* <!-- =====Bai Viet===== --> */}
                        <PostDashboard posts={posts}></PostDashboard>
                    </div>
                </div>

                {/* <!-- Section Right --> */}
                <div className="section-right" style={{marginTop: "8%"}}>
                    <TopYards yards={yards}></TopYards>
                </div>
            </div>
            {/* <!-- ======End Section======= --> */}
        </>
    );
}

function SalerComponent({ userData = [] }) {
    const Map = dynamic(() => import("@/components/Map"), {
        ssr: false,
        loading: () => <p>Loading...</p>,
    });

    const [posts, setPosts] = useState([]);
    const [yards, setYards] = useState([]);
    const [modal, setModal] = useState(false);

    useEffect(() => {
        refreshPosts()
        refreshYard()
    }, []);


    const refreshPosts = () => {
        axios.get("/api/post?limit=5").then((res) => {
            console.log(res);
            if (res && res.data) {
                const { data } = res.data;
                setPosts(data);
            }
        });
    }

    const refreshYard = () => {
        axios.get("/api/yard").then((res) => {
            if (res && res.data) {
                const { data } = res.data;
                data.forEach(yard => {
                    if (!yard["lag_lat"]) return
                    yard["position"] = yard["lag_lat"].split(', ')
                    yard["popupContent"] = yard.address
                });
                setYards(data);
            }
        });
    }

    const toggle = () => setModal(!modal);

    const handleCreatedCB = () => {
        setModal(false)
        refreshPosts()
    }

    const handleClosePost = () => {
        setModal(false)
    }

    return (
        <>
            {/* <!-- ======Section======= --> */}
            <div className="section flex flex-sb">
                {/* <!-- Section Left --> */}
                <div className="section-left">
                    {/* <!-- ======Banner======= --> */}
                    <p className='maptitle'>B·∫£n ƒë·ªì ch·ªâ v·ªã tr√≠ c·ªßa c√°c v·ª±a ve chai g·∫ßn b·∫°n</p>
                    <div>
                        <Map markerList={yards}></Map>
                    </div>

                    <div className="nfts">
                        <div className="trending heading flex flex-sb">
                            <h2>B√†i ƒëƒÉng v·ªÅ ve chai c·∫ßn b√°n</h2>
                            <p onClick={toggle}>T·∫°o b√†i vi·∫øt</p>
                        </div>

                        {/* <!-- ======Categories======= --> */}

                        <div className="categories flex flex-sb">
                            <div className="category flex">
                                <div className="icon">üî•</div>
                                <p>Tin n·ªïi b·∫≠t</p>
                            </div>

                            <div className="category flex">
                                <FcNews style={{ marginRight: '10px' }} className='icon' />
                                <p>B·∫£ng tin</p>
                            </div>

                            <div className="category flex">
                                <div className="icon">üïπÔ∏è</div>
                                <p>G·∫ßn b·∫°n</p>
                            </div>

                            <div className="category flex">
                                <FcShop style={{ marginRight: '10px' }} className='icon' />
                                <p>C√°c v·ª±a</p>
                            </div>
                        </div>
                        {/* <!-- =====Bai Viet===== --> */}
                        <PostDashboard posts={posts}></PostDashboard>
                    </div>
                </div>

                {/* <!-- Section Right --> */}
                <div className="section-right">

                    <TopYards yards={yards}></TopYards>

                </div>
            </div>
            {/* <!-- ======End Section======= --> */}

            <Modal isOpen={modal} toggle={toggle}>
                <ModalHeader><span style={{ color: "black", width: '140px', padding: '8px' }}>T·∫°o b√†i vi·∫øt m·ªõi</span></ModalHeader>
                <ModalBody>
                    <CreatePostPage userData={userData} handleCreatedCB={handleCreatedCB} handleClosePost={handleClosePost}></CreatePostPage>
                </ModalBody>
            </Modal>
        </>
    );
}

function YardComponent() {
    const Map = dynamic(() => import("@/components/Map"), {
        ssr: false,
        loading: () => <p>Loading...</p>,
    });

    const [yards, setYards] = useState([]);

    useEffect(() => {
        refreshYard()
    }, []);

    const refreshYard = () => {
        axios.get("/api/yard").then((res) => {
            if (res && res.data) {
                const { data } = res.data;
                data.forEach(yard => {
                    if (!yard["lag_lat"]) return
                    yard["position"] = yard["lag_lat"].split(', ')
                    yard["popupContent"] = yard.address
                });
                setYards(data);
            }
        });
    }


    return (
        <>
            <div style={{ marginTop: '30px', display: "flex" }}>
                <Map markerList={yards}></Map>
                <TopYards yards={yards}></TopYards>
            </div>
        </>
    );
}